/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nz.ac.aut.ense701.gui;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Hashtable;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;

/**
 *
 * @author Logan
 */
public class MiniGameGuess extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;
    private HashMap<String, ImageIcon> imageMap;
    private final String path = "..\\KiwiIslandExtended\\src\\nz\\ac\\aut\\ense701\\SilohuetteImages\\";
    private final String[] animalNames = {"black-robin", "brown-kiwi", "cat", "kiore", "little-spotted-kiwi", "oyster-catcher", "possum",
        "rat", "stewart-island-fernbird", "stoat", "tui", "white-heron"};
    private String answer;

    /**
     * Creates new form MiniGameGuess
     */
    public MiniGameGuess() {
        initComponents();
        loadImage();

        //pick 3 Silohuette images
        //randomly pick pick one as question
        //set up Question label
        //set up images
        //jLabel1.setIcon(new ImageIcon(image));
        //add listener to them
        lblImage1.setIcon(imageMap.get("cat" + "-silhouette"));
        lblImage1.setText("cat");
        lblImage2.setIcon(new ImageIcon(getImage("kiore")));
        lblImage3.setIcon(new ImageIcon(getImage("brown-kiwi")));

        start();
    }

    /**
     * This method will start the Quiz
     */
    public void start() {
        //setup Frame
        setTitle("Mini Game Guess");
        setDefaultCloseOperation(0);
        setVisible(true);
        pack();
    }

    @SuppressWarnings("unchecked")
    /**
     * This method load image to ImageMap
     */
    public void loadImage() {
        //initialize HashMap
        if (imageMap == null) {
            Hashtable<String, ImageIcon> table = new Hashtable<String, ImageIcon>();
            imageMap = new HashMap(table);
        }
        //add images
        for (int i = 0; i < animalNames.length; i++) {
            //original image
            String name = animalNames[i];
            Image image = getImage(name);
            //shillhouette image
            String silhouetteName = animalNames[i] + "-silhouette";
            Image silhouetteImage = getImage(silhouetteName);
            //add to hash map
            imageMap.put(name, new ImageIcon(image));
            imageMap.put(silhouetteName, new ImageIcon(silhouetteImage));
        }
    }

    /**
     * This method gets image
     *
     * @param fileName
     * @return image
     */
    private Image getImage(String fileName) {
        Image image = null;

        //load image
        try {
            image = ImageIO.read(new File(path + fileName + ".png"));
        } catch (IOException ex) {
            System.out.println("Image Not Found.");
        }
        return image;
    }

    
    private void setAnswer(){
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblImage1 = new javax.swing.JLabel();
        lblImage2 = new javax.swing.JLabel();
        lblImage3 = new javax.swing.JLabel();
        lblQustion = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblImage2.setText("Show_2");

        lblImage3.setText("Show_3");

        lblQustion.setText("Which one is the Kiwi?");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQustion, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblImage1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblImage2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblImage3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblQustion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblImage3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblImage2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblImage1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(147, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MiniGameGuess().setVisible(true);
            }
        });
    }
    private JFrame frame;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblImage1;
    private javax.swing.JLabel lblImage2;
    private javax.swing.JLabel lblImage3;
    private javax.swing.JLabel lblQustion;
    // End of variables declaration//GEN-END:variables
}
